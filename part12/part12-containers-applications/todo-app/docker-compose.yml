services:
  mongo:
    image: initialized-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
    networks:
      - todo-network
    
  redis:
    image: redis:7-alpine
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis_data:/data
    networks:
      - todo-network
      
  server:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://root:example@mongo:27017/the_database?authSource=admin
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongo
      - redis
    networks:
      - todo-network
    restart: unless-stopped

  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    networks:
      - todo-network
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
      - frontend
    networks:
      - todo-network
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:

networks:
  todo-network:
    driver: bridge