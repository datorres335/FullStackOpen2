name: CI/CD Pipeline

on:
  push:
    paths:
      - 'part11/full-stack-open-pokedex/**'
      - '.github/workflows/**' 
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]


env:
  SKIP_DEPLOYMENT: ${{ github.event_name == 'push' && contains(join(github.event.commits.*.message, ' '), '#skip') }}

jobs:
  # Build, lint, and unit test
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            part11/full-stack-open-pokedex
            .github/workflows
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './part11/full-stack-open-pokedex/package-lock.json'
      - name: Install dependencies
        working-directory: ./part11/full-stack-open-pokedex
        run: npm ci
      - name: Check style
        working-directory: ./part11/full-stack-open-pokedex
        run: npm run eslint
      - name: Build
        working-directory: ./part11/full-stack-open-pokedex
        run: npm run build
      - name: Unit Test
        working-directory: ./part11/full-stack-open-pokedex
        run: npm test

  # E2E tests (runs in parallel with build_and_test)
  e2e_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            part11/full-stack-open-pokedex
            .github/workflows
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './part11/full-stack-open-pokedex/package-lock.json'
      - name: Install dependencies
        working-directory: ./part11/full-stack-open-pokedex
        run: npm ci
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('./part11/full-stack-open-pokedex/package-lock.json') }}
      - name: Install Playwright Browsers
        working-directory: ./part11/full-stack-open-pokedex
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: ./part11/full-stack-open-pokedex
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ./part11/full-stack-open-pokedex/playwright-report/
          retention-days: 30

  # Version tagging (only on push to main, after tests pass, and if not skipped)
  tag_release:
    needs: [build_and_test, e2e_tests]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.env.SKIP_DEPLOYMENT == 'false' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c # use the full hash number instead of version number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          DRY_RUN: false

  # Deploy to Render (only on push to main, after tests pass, and if not skipped)
  deploy:
    needs: [build_and_test, e2e_tests]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.env.SKIP_DEPLOYMENT == 'false' }}
    steps:
      - name: Trigger deployment
        uses: sws2apps/render-deployment@main
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false