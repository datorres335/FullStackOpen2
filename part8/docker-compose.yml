services:
  mongo:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-example}
      MONGO_INITDB_DATABASE: library
    volumes:
      - mongo_data:/data/db
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  backend:
    build:
      context: ./library-backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:${MONGO_PASSWORD:-example}@mongo:27017/library?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - PORT=4000
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/.well-known/apollo/server-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./library-frontend
      dockerfile: Dockerfile
      args:
        - VITE_GRAPHQL_URI=/graphql
        - VITE_GRAPHQL_WS_URI=wss://localhost/graphql
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data:

networks:
  library-network:
    driver: bridge