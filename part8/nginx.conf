events { 
    worker_connections 1024; 
}

http {
    upstream frontend {
        server frontend:3000;  # Frontend serves on port 3000
    }

    upstream backend {
        server backend:4000;   # Backend serves on port 4000
    }

    server {
        listen 80;

        # Frontend routes - serve React app
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle SPA routing errors
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }

        # Fallback for SPA routing
        location @fallback {
            proxy_pass http://frontend;
        }

        # GraphQL endpoint
        location /graphql {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for GraphQL subscriptions
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # CORS headers for GraphQL
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
        }
    }
}